const regex_css=/[^;:]+/g,regex_class=/[^ ]+/g;export function setText(a,b){let c,d,e=a._mkc;e?d=e._t:a._mkc=e={},d!==b&&(e._t=b,3===a.nodeType&&(c=a)||(c=a.firstChild)?c.nodeValue=b:a.textContent=b)}export function getText(a){let b,c,d=a._mkc;return d?c=d._t:a._mkc=d={},"string"!=typeof c&&(3===a.nodeType&&(b=a)||(b=a.firstChild)?d._t=c=b.nodeValue:d._t=c=a.textContent),c}export function setAttributes(a,b){let c=a._mkc;for(let d in c||(a._mkc=c={}),b)setAttribute(a,d,b[d],c)}export function setAttribute(a,b,c,d){let e;d||(d=a._mkc)?e=d["_a"+b]:a._mkc=d={},e!==c&&(d["_a"+b]=c,!1===c?a.removeAttribute(b):a.setAttribute(b,c))}export function removeAttributes(a,b){let c=a._mkc;c||(a._mkc=c={});for(let d=0;d<b.length;d++)removeAttribute(a,b[d],c)}export function removeAttribute(a,b,c){let d;c||(c=a._mkc)?d=c["_a"+b]:a._mkc=c={},!1!==d&&(c["_a"+b]=!1,a.removeAttribute(b))}export function getAttribute(a,b){let c,d;return(c=a._mkc)?d=c["_a"+b]:a._mkc=c={},"string"!=typeof d&&(c["_a"+b]=d=a.getAttribute(b)),d}export function hasAttribute(a,b){const c=getAttribute(a,b);return c||""===c}export function setClass(a,b){let c,d=a._mkc;d?c=d._c:a._mkc=d={},c!==b&&(d._c=b,a.className=b)}export function getClass(a){let b,c=a._mkc;return c?b=c._c:a._mkc=c={},"string"!=typeof b&&(c._c=b=a.className),b}function transformClassCache(a){let b,c=a._mkc;if(c?b=c._c:a._mkc=c={},!b)return c._c={};if("string"==typeof b){const a=b.match(regex_class);c._c=b={};for(let c=0;c<a.length;c++)b[a[c]]=1}return b}export function addClass(a,b,c){const d=c||transformClassCache(a),e=d[b];e||(d[b]=1,a.classList.add(b))}export function addClasses(a,b){const c=transformClassCache(a);for(let d=0;d<b.length;d++)addClass(a,b[d],c)}export function removeClass(a,b,c){const d=c||transformClassCache(a),e=d[b];0!==e&&(d[b]=0,a.classList.remove(b))}export function removeClasses(a,b){const c=transformClassCache(a);for(let d=0;d<b.length;d++)removeClass(a,b[d],c)}export function hasClass(a,b){const c=transformClassCache(a);let d=c[b];return"number"!=typeof d&&(c[b]=d=a.classList.contains(b)?1:0),!!d}export function toggleClass(a,b,c,d){const e=d||transformClassCache(a);let f=!!e[b];c="undefined"==typeof c?!f:!!c,f!==c&&(e[b]=c?1:0,c?a.classList.add(b):a.classList.remove(b))}export function toggleClasses(a,b){const c=transformClassCache(a);if(b.constructor===Array)for(let d=0;d<b.length;d++)toggleClass(a,b[d],void 0,c);else for(let d in b)toggleClass(a,d,b[d],c)}export function setCss(a,b){let c,d=a._mkc;d?c=d._s:a._mkc=d={},c!==b&&(d._s=b,a.style.cssText=b)}function transformStyleCache(a){let b,c=a._mkc;if(c?b=c._s:a._mkc=c={},!b)return c._s={};if("string"==typeof b){const a=b.match(regex_css);c._s=b={};for(let c=0;c<a.length;c+=2)b[a[c]]=a[c+1]}return b}export function setStyle(a,b,c,d,e){const f=e||transformStyleCache(a);f[b]!==c&&(f[b]=c,(d||a.style).setProperty(b,c))}export function setStyles(a,b){const c=transformStyleCache(a),d=a.style;for(let e in b)setStyle(a,e,b[e],d,c)}export function setHtml(a,b){let c,d=a._mkc;d?c=d._h:a._mkc=d={},c!==b&&(a.innerHTML=b,d._h=b,d._t=null)}export function getHtml(a){let b,c=a._mkc;return c?b=c._h:a._mkc=c={},"string"!=typeof b&&(c._h=b=a.innerHTML),b}